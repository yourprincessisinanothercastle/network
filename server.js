// Generated by CoffeeScript 1.9.3
(function() {
  "d1 =[\n    [-1.1939655172413808, 41.338362068965516],\n    [5.25, 37.125],\n    [19.180608365019012, 20.872623574144487],\n    [18.517937219730943, 15.836322869955158],\n    [-3.078947368421052, 12.236842105263158],\n    [-9.196078431372548, 13.154411764705882],\n    [-10.059322033898304, 17.686440677966104],\n    [-8.182692307692307, 35.51442307692308]\n  ]\n\nd2 = [\n    [3.3461538461538463, -7.038461538461538],\n    [-3.078947368421052, 12.236842105263158],\n    [18.517937219730943, 15.836322869955158],\n    [23.175984752223634, 3.295425667090216],\n    [23.128304821150856, 3.06298600311042],\n    [13.064356435643564, -7.48019801980198]\n  ]\n\n\ndata = [d1, d2]\n\ndraw = (data) ->\n  console.log('drawing...')\n  c2 = document.getElementById('c').getContext('2d');\n  c2.fillStyle = '#000000';\n\n\n  offset = 100\n\n  for d in data\n    c2.beginPath();\n    console.log(d[0][0] + offset, d[0][1] + offset)\n    c2.moveTo(d[0][0] + offset, d[0][1] + offset)\n    for point in d\n      console.log(point[0] + offset, point[1] + offset)\n      c2.lineTo(point[0] + offset, point[1] + offset)\n      c2.fill()\n    c2.closePath();\n\n\ndraw(data)";
  var connections, peer;

  peer = new Peer('wss://webrtc-p2p-broker.herokuapp.com', {
    binaryType: 'arraybuffer',
    video: false,
    audio: false
  });

  peer.listen();

  connections = {};

  peer.onconnection = function(connection) {
    connections[connection.id] = connection;
    connection.ondisconnect = function(reason) {
      return delete connections[connection.id];
    };
    connection.onerror = function(error) {
      return console.error(error);
    };
    connection.onmessage = function(label, message) {
      return console.log(label, message);
    };
    connection.send('reliable', 'hi!');
    console.log(connection.streams.local, connection.streams.remote);
    return connection.close();
  };

  peer.onroute = function(route) {
    return console.log('route:', route);
  };

  peer.onerror = function(error) {
    return console.log(error);
  };

}).call(this);

//# sourceMappingURL=server.js.map
