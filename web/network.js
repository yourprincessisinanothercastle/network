// Generated by CoffeeScript 1.9.3
var add_room_events, append_event, connected, connection, join_room, key, local_events, onchallenge, protocol, room_data, room_events, s, send, set_room_data, user, wsuri;

console.log("Ok, AutobahnJS loaded", autobahn.version);

user = "joe";

key = "123";

connected = false;

s = false;

local_events = [];

room_data = {};

room_events = {};

onchallenge = function(session, method, extra) {
  if (method === "wampcra") {
    console.log("onchallenge: authenticating via '" + method + "' and challenge '" + extra.challenge + "'");
    return autobahn.auth_cra.sign(key, extra.challenge);
  } else {
    throw "don't know how to authenticate using '" + method + "'";
  }
};

wsuri = '';

if (document.location.origin === "file://") {
  wsuri = "ws://127.0.0.1:8080/ws";
} else {
  if (document.location.protocol === "http:") {
    protocol = 'ws:';
  } else {
    protocol = 'wss:';
  }
  wsuri = protocol + "//" + document.location.host + "/ws";
}

connection = new autobahn.Connection({
  url: wsuri,
  realm: 'realm1',
  authmethods: ["wampcra"],
  authid: user,
  onchallenge: onchallenge
});

add_room_events = function(args, kwargs, details) {
  "callback for the specific room events";
  return room_events[room_id].push({
    args: args,
    kwargs: kwargs,
    details: details
  });
};

set_room_data = function(room_id, data) {
  "set the room data for a joined room.";
  return rooms[room_id] = data;
};

join_room = function(room_id, data) {
  "let this client join a room\ncalled via rpc from the server.\n\nsubscribes to the room events,\nsets room data";
  set_room_data(room_id, data);
  return session.subscribe('com.game.rooms.' + room_id, add_room_events);
};

connection.onopen = function(session, details) {
  console.log("connected session with ID " + session.id);
  console.log("authenticated using method '" + details.authmethod + "' and provider '" + details.authprovider + "'");
  console.log("authenticated with authid '" + details.authid + "' and authrole '" + details.authrole + "'");
  connected = true;
  s = session;
  session.register('com.game.join_room.' + user, join_room);
};

connection.onclose = function(reason, details) {
  console.log("disconnected", reason, details.reason, details);
  connected = false;
};

send = function(event_dict) {
  var events_topic;
  events_topic = 'com.game.events.' + user;
  console.log('sending ' + event_dict + ' to ' + events_topic);
  if (connected) {
    console.log();
    s.publish(events_topic, [event_dict], {}, {
      acknowledge: true
    });
  } else {
    console.log('not connected...');
  }
};

console.log('connecting to ' + wsuri);

connection.open();

append_event = function(event) {
  return events.push(event);
};

//# sourceMappingURL=network.js.map
